// Used to send a file over the network.
// Loads up the file and stores it in a byte[]
// Best sent over the network compressed

package org.peak15.warpzone.shared;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.nio.ByteBuffer;
import com.esotericsoftware.kryo.CustomSerialization;
import com.esotericsoftware.kryo.Kryo;
import com.esotericsoftware.kryo.serialize.ArraySerializer;

public class NetFile implements CustomSerialization {
	
	public byte[] bytes; // the file

	public NetFile() {}

	public NetFile(File file) throws IOException {
		// Read in file.
		InputStream is = new FileInputStream(file);
		bytes = new byte[(int) file.length()];
		is.read(bytes);
	    is.close();
	}
	
	public void write(File file) throws IOException {
		OutputStream os = new FileOutputStream(file);
		os.write(bytes);
		os.close();
	}

	@Override
	public void readObjectData(Kryo kryo, ByteBuffer buffer) {
		ArraySerializer aser = new ArraySerializer(kryo);
		aser.setDimensionCount(1);
		aser.setLength(bytes.length);
		aser.setElementsCanBeNull(false);
		aser.setElementsAreSameType(true);
		aser.writeObjectData(buffer, bytes);
	}

	@Override
	public void writeObjectData(Kryo kryo, ByteBuffer buffer) {
		ArraySerializer aser = new ArraySerializer(kryo);
		aser.setDimensionCount(1);
		aser.setElementsCanBeNull(false);
		aser.setElementsAreSameType(true);
		bytes = aser.readObjectData(buffer, byte[].class);
	}
}
