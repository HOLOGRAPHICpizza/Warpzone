// Used to prepare a file for transport over the network.

package org.peak15.warpzone.shared;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.zip.DataFormatException;
import java.util.zip.Deflater;
import java.util.zip.Inflater;

public class NetFile {
	public byte[] cbytes; // compressed file
	
	public NetFile(File file) throws IOException {
		// Read in file.
		InputStream is = new FileInputStream(file);
		byte[] bytes = new byte[(int) file.length()];
		is.read(bytes);
	    is.close();
	    
	    // Compress
	    cbytes = compressBytes(bytes);
	}
	
	public void write(File file) throws IOException, DataFormatException {
		OutputStream os = new FileOutputStream(file);
		os.write(this.getBytes());
		os.close();
	}
	
	public byte[] getBytes() throws IOException, DataFormatException {
		return extractBytes(cbytes);
	}
	
	/**
	 * Compresses a byte array with deflate.
	 * Ninja'd from: http://www.dscripts.net/2010/06/04/compress-and-uncompress-a-java-byte-array-using-deflater-and-enflater/
	 * @param data Data to compress.
	 * @return Compressed data.
	 * @throws IOException
	 * @author Burhan Uddin
	 */
	public static byte[] compressBytes(byte[] data) throws IOException {
		byte[] input = data; //the format... data is the total string
		Deflater df = new Deflater(); //this function mainly generate the byte code
		//df.setLevel(Deflater.BEST_COMPRESSION);
		df.setInput(input);
		
		ByteArrayOutputStream baos = new ByteArrayOutputStream(input.length); //we write the generated byte code in this array
		df.finish();
		byte[] buff = new byte[1024]; //segment segment pop....segment set 1024
		while(!df.finished())
		{
			int count = df.deflate(buff); //returns the generated code... index
			baos.write(buff, 0, count); //write 4m 0 to count
		}
		baos.close();
		byte[] output = baos.toByteArray();
		
		return output;
	}
	
	/**
	 * Decompress a byte array compressed with deflate.
	 * Ninja'd from: http://www.dscripts.net/2010/06/04/compress-and-uncompress-a-java-byte-array-using-deflater-and-enflater/
	 * @param input Byte array to decompress.
	 * @return Decompressed byte array.
	 * @throws IOException
	 * @throws DataFormatException
	 * @author Burhan Uddin
	 */
	public static byte[] extractBytes(byte[] input) throws IOException, DataFormatException {
		Inflater ifl = new Inflater(); //mainly generate the extraction
		//df.setLevel(Deflater.BEST_COMPRESSION);
		ifl.setInput(input);
		
		ByteArrayOutputStream baos = new ByteArrayOutputStream(input.length);
		byte[] buff = new byte[1024];
		while(!ifl.finished())
		{
			int count = ifl.inflate(buff);
			baos.write(buff, 0, count);
		}
		baos.close();
		byte[] output = baos.toByteArray();
		
		return output;
	}
}
